from django.db import models
class login(models.Model):
    username=models.CharField(max_length=200)
    password=models.CharField(max_length=200)
    type=models.CharField(max_length=200)
class user(models.Model):
    LOGIN=models.ForeignKey(login,on_delete=models.CASCADE)
    fname=models.CharField(max_length=200)
    lname=models.CharField(max_length=200)
    gender=models.CharField(max_length=200)
    place=models.CharField(max_length=200)
    post=models.CharField(max_length=200)
    pin=models.IntegerField()
    phone=models.BigIntegerField()
    email=models.CharField(max_length=200)
class complaint(models.Model):
    USER=models.ForeignKey(user,on_delete=models.CASCADE)
    comp=models.TextField()
    date=models.DateField()
    reply=models.CharField(max_length=200)
class company(models.Model):
    LOGIN=models.ForeignKey(login,on_delete=models.CASCADE)
    name=models.CharField(max_length=200)
    place=models.CharField(max_length=200)
    phone=models.BigIntegerField()
    email=models.CharField(max_length=200)
    website = models.TextField()
class reviews(models.Model):
    USER=models.ForeignKey(user,on_delete=models.CASCADE)
    LOGIN=models.ForeignKey(login,on_delete=models.CASCADE)
    review=models.TextField()
    date=models.DateField()
class guide(models.Model):
    LOGIN = models.ForeignKey(login, on_delete=models.CASCADE)
    fname = models.CharField(max_length=200)
    lname = models.CharField(max_length=200)
    address = models.CharField(max_length=200)
    phone = models.BigIntegerField()
    email = models.CharField(max_length=200)
class doubts(models.Model):
    GUIDE=models.ForeignKey(guide,on_delete=models.CASCADE)
    USER=models.ForeignKey(user,on_delete=models.CASCADE)
    dbts = models.TextField()
    reply=models.CharField(max_length=200)
    date = models.DateField()
class chat(models.Model):
    fid=models.ForeignKey(login,on_delete=models.CASCADE,related_name='fid')
    tid=models.ForeignKey(login,on_delete=models.CASCADE,related_name='tid')
    date = models.DateField()
    msg = models.TextField()
    time = models.TimeField()
class guidelines(models.Model):
    COMPANY=models.ForeignKey(company,on_delete=models.CASCADE)
    guidelines=models.TextField()
    details=models.TextField()
class tips(models.Model):
    GUIDE=models.ForeignKey(guide,on_delete=models.CASCADE)
    tip = models.TextField()
    details = models.TextField()
class test(models.Model):
    GUIDE=models.ForeignKey(guide,on_delete=models.CASCADE)
    exam=models.TextField()
    date = models.DateField()
    vaccancy=models.TextField()
class questions(models.Model):
    TEST=models.ForeignKey(test,on_delete=models.CASCADE)
    question=models.TextField()
    op1=models.TextField()
    op2=models.TextField()
    op3=models.TextField()
    op4=models.TextField()
    ans=models.TextField()
class vaccancy(models.Model):
    COMPANY=models.ForeignKey(company,on_delete=models.CASCADE)
    job=models.CharField(max_length=200)
    vacncy=models.CharField(max_length=200)
    qualif=models.CharField(max_length=200)
    exp=models.CharField(max_length=200)
    salary=models.CharField(max_length=200)
    det=models.TextField()
class vac_qn(models.Model):
    VACCANCY=models.ForeignKey(vaccancy,on_delete=models.CASCADE)
    question=models.TextField()
    ans=models.TextField()
class app_req(models.Model):
    VACCANCY=models.ForeignKey(vaccancy,on_delete=models.CASCADE)
    date = models.DateField()
    status=models.TextField()
    USER=models.ForeignKey(user,on_delete=models.CASCADE)
class test_res(models.Model):
    QUESTIONS=models.ForeignKey(questions,on_delete=models.CASCADE)
    date = models.DateField()
    res=models.CharField(max_length=200)
    ans=models.CharField(max_length=200)
    USER=models.ForeignKey(user,on_delete=models.CASCADE)
class uplds(models.Model):
    cv = models.FileField()
    date = models.DateField()
    USER=models.ForeignKey(user,on_delete=models.CASCADE)
class answer_details(models.Model):
    VAC_QN=models.ForeignKey(vac_qn,on_delete=models.CASCADE)
    ans=models.CharField(max_length=200)
    emot=models.CharField(max_length=200)
    USER=models.ForeignKey(user,on_delete=models.CASCADE)
    date= models.DateField()
    oans = models.CharField(max_length=200)